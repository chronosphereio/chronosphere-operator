---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: chronosphererolluprules.monitoring.chronosphere.io
spec:
  group: monitoring.chronosphere.io
  names:
    kind: ChronosphereRollupRule
    listKind: ChronosphereRollupRuleList
    plural: chronosphererolluprules
    singular: chronosphererolluprule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ChronosphereRollupRule is the Schema for the chronosphererolluprules
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ChronosphereRollupRuleSpec defines the desired state of ChronosphereRollupRule
            properties:
              add_metric_type_label:
                description: Defines whether to add a `__rollup_type__` label in the
                  new metric.
                type: boolean
              aggregation:
                description: aggregation
                type: string
              bucket_slug:
                description: Required slug of the bucket the RollupRule belongs to.
                type: string
              created_at:
                description: |-
                  Timestamp of when the RollupRule was created. Cannot be set by clients.
                  Read Only: true
                type: string
              drop_raw:
                description: Defines whether to automatically generate drop rules
                  for this rollup.
                type: boolean
              expansive_match:
                description: |-
                  Enables expansive label matching behavior for the provided filters and
                  label_policy.keep or graphite_label_policy.replace (if set). By default
                  (expansive_match=false), a series matches and aggregates only if each label
                  defined by filters and label_policy.keep or graphite_label_policy.replace
                  (respectively) exist in said series. Setting expansive_match=true removes
                  this restriction.
                type: boolean
              filters:
                description: Filters that determine to which metrics to apply the
                  rule.
                items:
                  description: |-
                    Configv1LabelFilter configv1 label filter


                    swagger:model configv1LabelFilter
                  properties:
                    name:
                      description: |-
                        Name of the label to match.
                        Example: job
                      type: string
                    value_glob:
                      description: |-
                        Glob value of the label to match.
                        Example: myservice*
                      type: string
                  type: object
                type: array
              graphite_label_policy:
                description: graphite label policy
                properties:
                  replace:
                    description: |-
                      Required list of labels to replace. Useful for discarding
                      high-cardinality values while still preserving the original positions of
                      the Graphite metric.
                    items:
                      description: |-
                        GraphiteLabelPolicyReplace graphite label policy replace


                        swagger:model GraphiteLabelPolicyReplace
                      properties:
                        name:
                          description: |-
                            Required name of the label whose value should be replaced. Only
                            `__gX__` labels are allowed (aka positional Graphite labels).
                            Example: __g1__
                          type: string
                        new_value:
                          description: |-
                            Required new value of the replaced label.
                            Example: ALL_HOSTS
                          type: string
                      type: object
                    type: array
                type: object
              interval:
                description: |-
                  Interval between aggregated data points, equivalent to the resolution
                  field in storage policy. If set, then the storage_policy field can't be
                  set.
                type: string
              label_policy:
                description: label policy
                properties:
                  discard:
                    description: |-
                      Labels that should be discarded in the output metric. If set, then the
                      keep field must be empty.
                    items:
                      type: string
                    type: array
                  keep:
                    description: |-
                      Labels that should be retained in the output metric. If set, then the
                      discard field must be empty.
                    items:
                      type: string
                    type: array
                type: object
              metric_name:
                description: Name of the new metric created as a result of the rollup.
                type: string
              metric_type:
                description: metric type
                type: string
              mode:
                description: mode
                type: string
              name:
                description: Required name of the RollupRule. May be modified after
                  the RollupRule is created.
                type: string
              slug:
                description: Unique identifier of the RollupRule. If slug is not provided,
                  one will be generated based of the name field. Cannot be modified
                  after the RollupRule is created.
                type: string
              storage_policy:
                description: storage policy
                properties:
                  resolution:
                    description: Required resolution of the aggregated metrics.
                    type: string
                  retention:
                    description: Required retention of the aggregated metrics.
                    type: string
                type: object
              updated_at:
                description: |-
                  Timestamp of when the RollupRule was last updated. Cannot be set by clients.
                  Read Only: true
                type: string
            type: object
          status:
            description: ChronosphereRollupRuleStatus defines the observed state of
              ChronosphereRollupRule
            properties:
              lastProcessedGeneration:
                format: int64
                type: integer
              message:
                type: string
              state:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
