//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"chronosphere.io/chronosphere-operator/models"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereClassicDashboard) DeepCopyInto(out *ChronosphereClassicDashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereClassicDashboard.
func (in *ChronosphereClassicDashboard) DeepCopy() *ChronosphereClassicDashboard {
	if in == nil {
		return nil
	}
	out := new(ChronosphereClassicDashboard)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereClassicDashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereClassicDashboardList) DeepCopyInto(out *ChronosphereClassicDashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereClassicDashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereClassicDashboardList.
func (in *ChronosphereClassicDashboardList) DeepCopy() *ChronosphereClassicDashboardList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereClassicDashboardList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereClassicDashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereClassicDashboardSpec) DeepCopyInto(out *ChronosphereClassicDashboardSpec) {
	*out = *in
	if in.Collection != nil {
		in, out := &in.Collection, &out.Collection
		*out = new(models.Configv1CollectionReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereClassicDashboardSpec.
func (in *ChronosphereClassicDashboardSpec) DeepCopy() *ChronosphereClassicDashboardSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereClassicDashboardSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereClassicDashboardStatus) DeepCopyInto(out *ChronosphereClassicDashboardStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereClassicDashboardStatus.
func (in *ChronosphereClassicDashboardStatus) DeepCopy() *ChronosphereClassicDashboardStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereClassicDashboardStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereCollection) DeepCopyInto(out *ChronosphereCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereCollection.
func (in *ChronosphereCollection) DeepCopy() *ChronosphereCollection {
	if in == nil {
		return nil
	}
	out := new(ChronosphereCollection)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereCollectionList) DeepCopyInto(out *ChronosphereCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereCollectionList.
func (in *ChronosphereCollectionList) DeepCopy() *ChronosphereCollectionList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereCollectionList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereCollectionSpec) DeepCopyInto(out *ChronosphereCollectionSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereCollectionSpec.
func (in *ChronosphereCollectionSpec) DeepCopy() *ChronosphereCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereCollectionSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereCollectionStatus) DeepCopyInto(out *ChronosphereCollectionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereCollectionStatus.
func (in *ChronosphereCollectionStatus) DeepCopy() *ChronosphereCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereCollectionStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDashboard) DeepCopyInto(out *ChronosphereDashboard) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDashboard.
func (in *ChronosphereDashboard) DeepCopy() *ChronosphereDashboard {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDashboard)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereDashboard) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDashboardList) DeepCopyInto(out *ChronosphereDashboardList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereDashboard, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDashboardList.
func (in *ChronosphereDashboardList) DeepCopy() *ChronosphereDashboardList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDashboardList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereDashboardList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDashboardSpec) DeepCopyInto(out *ChronosphereDashboardSpec) {
	*out = *in
	if in.Collection != nil {
		in, out := &in.Collection, &out.Collection
		*out = new(models.Configv1CollectionReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDashboardSpec.
func (in *ChronosphereDashboardSpec) DeepCopy() *ChronosphereDashboardSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDashboardSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDashboardStatus) DeepCopyInto(out *ChronosphereDashboardStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDashboardStatus.
func (in *ChronosphereDashboardStatus) DeepCopy() *ChronosphereDashboardStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDashboardStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDropRule) DeepCopyInto(out *ChronosphereDropRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDropRule.
func (in *ChronosphereDropRule) DeepCopy() *ChronosphereDropRule {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDropRule)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereDropRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDropRuleList) DeepCopyInto(out *ChronosphereDropRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereDropRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDropRuleList.
func (in *ChronosphereDropRuleList) DeepCopy() *ChronosphereDropRuleList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDropRuleList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereDropRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDropRuleSpec) DeepCopyInto(out *ChronosphereDropRuleSpec) {
	*out = *in
	if in.ConditionalRateBasedDrop != nil {
		in, out := &in.ConditionalRateBasedDrop, &out.ConditionalRateBasedDrop
		*out = new(models.DropRuleConditionalRateBasedDrop)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]*models.Configv1LabelFilter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(models.Configv1LabelFilter)
				**out = **in
			}
		}
	}
	if in.ValueBasedDrop != nil {
		in, out := &in.ValueBasedDrop, &out.ValueBasedDrop
		*out = new(models.DropRuleValueBasedDrop)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDropRuleSpec.
func (in *ChronosphereDropRuleSpec) DeepCopy() *ChronosphereDropRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDropRuleSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereDropRuleStatus) DeepCopyInto(out *ChronosphereDropRuleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereDropRuleStatus.
func (in *ChronosphereDropRuleStatus) DeepCopy() *ChronosphereDropRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereDropRuleStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMappingRule) DeepCopyInto(out *ChronosphereMappingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMappingRule.
func (in *ChronosphereMappingRule) DeepCopy() *ChronosphereMappingRule {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMappingRule)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereMappingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMappingRuleList) DeepCopyInto(out *ChronosphereMappingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereMappingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMappingRuleList.
func (in *ChronosphereMappingRuleList) DeepCopy() *ChronosphereMappingRuleList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMappingRuleList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereMappingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMappingRuleSpec) DeepCopyInto(out *ChronosphereMappingRuleSpec) {
	*out = *in
	if in.AggregationPolicy != nil {
		in, out := &in.AggregationPolicy, &out.AggregationPolicy
		*out = new(models.MappingRuleAggregationPolicy)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]*models.Configv1LabelFilter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(models.Configv1LabelFilter)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMappingRuleSpec.
func (in *ChronosphereMappingRuleSpec) DeepCopy() *ChronosphereMappingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMappingRuleSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMappingRuleStatus) DeepCopyInto(out *ChronosphereMappingRuleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMappingRuleStatus.
func (in *ChronosphereMappingRuleStatus) DeepCopy() *ChronosphereMappingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMappingRuleStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMonitor) DeepCopyInto(out *ChronosphereMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMonitor.
func (in *ChronosphereMonitor) DeepCopy() *ChronosphereMonitor {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMonitor)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMonitorList) DeepCopyInto(out *ChronosphereMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMonitorList.
func (in *ChronosphereMonitorList) DeepCopy() *ChronosphereMonitorList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMonitorList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMonitorSpec) DeepCopyInto(out *ChronosphereMonitorSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Collection != nil {
		in, out := &in.Collection, &out.Collection
		*out = new(models.Configv1CollectionReference)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(models.MonitorSchedule)
		**out = **in
	}
	if in.SeriesConditions != nil {
		in, out := &in.SeriesConditions, &out.SeriesConditions
		*out = new(models.MonitorSeriesConditions)
		**out = **in
	}
	if in.SignalGrouping != nil {
		in, out := &in.SignalGrouping, &out.SignalGrouping
		*out = new(models.MonitorSignalGrouping)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMonitorSpec.
func (in *ChronosphereMonitorSpec) DeepCopy() *ChronosphereMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMonitorSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereMonitorStatus) DeepCopyInto(out *ChronosphereMonitorStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereMonitorStatus.
func (in *ChronosphereMonitorStatus) DeepCopy() *ChronosphereMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereMonitorStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotificationPolicy) DeepCopyInto(out *ChronosphereNotificationPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotificationPolicy.
func (in *ChronosphereNotificationPolicy) DeepCopy() *ChronosphereNotificationPolicy {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotificationPolicy)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereNotificationPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotificationPolicyList) DeepCopyInto(out *ChronosphereNotificationPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereNotificationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotificationPolicyList.
func (in *ChronosphereNotificationPolicyList) DeepCopy() *ChronosphereNotificationPolicyList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotificationPolicyList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereNotificationPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotificationPolicySpec) DeepCopyInto(out *ChronosphereNotificationPolicySpec) {
	*out = *in
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = new(models.NotificationPolicyRoutes)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotificationPolicySpec.
func (in *ChronosphereNotificationPolicySpec) DeepCopy() *ChronosphereNotificationPolicySpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotificationPolicySpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotificationPolicyStatus) DeepCopyInto(out *ChronosphereNotificationPolicyStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotificationPolicyStatus.
func (in *ChronosphereNotificationPolicyStatus) DeepCopy() *ChronosphereNotificationPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotificationPolicyStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotifier) DeepCopyInto(out *ChronosphereNotifier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotifier.
func (in *ChronosphereNotifier) DeepCopy() *ChronosphereNotifier {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotifier)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereNotifier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotifierList) DeepCopyInto(out *ChronosphereNotifierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereNotifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotifierList.
func (in *ChronosphereNotifierList) DeepCopy() *ChronosphereNotifierList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotifierList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereNotifierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotifierSpec) DeepCopyInto(out *ChronosphereNotifierSpec) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(models.NotifierEmailConfig)
		**out = **in
	}
	if in.OpsGenie != nil {
		in, out := &in.OpsGenie, &out.OpsGenie
		*out = new(models.NotifierOpsGenieConfig)
		**out = **in
	}
	if in.Pagerduty != nil {
		in, out := &in.Pagerduty, &out.Pagerduty
		*out = new(models.NotifierPagerdutyConfig)
		**out = **in
	}
	if in.Slack != nil {
		in, out := &in.Slack, &out.Slack
		*out = new(models.NotifierSlackConfig)
		**out = **in
	}
	if in.VictorOps != nil {
		in, out := &in.VictorOps, &out.VictorOps
		*out = new(models.NotifierVictorOpsConfig)
		**out = **in
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = new(models.NotifierWebhookConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotifierSpec.
func (in *ChronosphereNotifierSpec) DeepCopy() *ChronosphereNotifierSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotifierSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereNotifierStatus) DeepCopyInto(out *ChronosphereNotifierStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereNotifierStatus.
func (in *ChronosphereNotifierStatus) DeepCopy() *ChronosphereNotifierStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereNotifierStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRecordingRule) DeepCopyInto(out *ChronosphereRecordingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRecordingRule.
func (in *ChronosphereRecordingRule) DeepCopy() *ChronosphereRecordingRule {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRecordingRule)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereRecordingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRecordingRuleList) DeepCopyInto(out *ChronosphereRecordingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereRecordingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRecordingRuleList.
func (in *ChronosphereRecordingRuleList) DeepCopy() *ChronosphereRecordingRuleList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRecordingRuleList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereRecordingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRecordingRuleSpec) DeepCopyInto(out *ChronosphereRecordingRuleSpec) {
	*out = *in
	if in.LabelPolicy != nil {
		in, out := &in.LabelPolicy, &out.LabelPolicy
		*out = new(models.Configv1RecordingRuleLabelPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRecordingRuleSpec.
func (in *ChronosphereRecordingRuleSpec) DeepCopy() *ChronosphereRecordingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRecordingRuleSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRecordingRuleStatus) DeepCopyInto(out *ChronosphereRecordingRuleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRecordingRuleStatus.
func (in *ChronosphereRecordingRuleStatus) DeepCopy() *ChronosphereRecordingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRecordingRuleStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereResourcePools) DeepCopyInto(out *ChronosphereResourcePools) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereResourcePools.
func (in *ChronosphereResourcePools) DeepCopy() *ChronosphereResourcePools {
	if in == nil {
		return nil
	}
	out := new(ChronosphereResourcePools)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereResourcePools) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereResourcePoolsList) DeepCopyInto(out *ChronosphereResourcePoolsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereResourcePools, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereResourcePoolsList.
func (in *ChronosphereResourcePoolsList) DeepCopy() *ChronosphereResourcePoolsList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereResourcePoolsList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereResourcePoolsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereResourcePoolsSpec) DeepCopyInto(out *ChronosphereResourcePoolsSpec) {
	*out = *in
	if in.DefaultPool != nil {
		in, out := &in.DefaultPool, &out.DefaultPool
		*out = new(models.ResourcePoolsDefaultPool)
		**out = **in
	}
	if in.Pools != nil {
		in, out := &in.Pools, &out.Pools
		*out = make([]*models.ResourcePoolsPool, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(models.ResourcePoolsPool)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereResourcePoolsSpec.
func (in *ChronosphereResourcePoolsSpec) DeepCopy() *ChronosphereResourcePoolsSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereResourcePoolsSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereResourcePoolsStatus) DeepCopyInto(out *ChronosphereResourcePoolsStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereResourcePoolsStatus.
func (in *ChronosphereResourcePoolsStatus) DeepCopy() *ChronosphereResourcePoolsStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereResourcePoolsStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRollupRule) DeepCopyInto(out *ChronosphereRollupRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRollupRule.
func (in *ChronosphereRollupRule) DeepCopy() *ChronosphereRollupRule {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRollupRule)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereRollupRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRollupRuleList) DeepCopyInto(out *ChronosphereRollupRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereRollupRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRollupRuleList.
func (in *ChronosphereRollupRuleList) DeepCopy() *ChronosphereRollupRuleList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRollupRuleList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereRollupRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRollupRuleSpec) DeepCopyInto(out *ChronosphereRollupRuleSpec) {
	*out = *in
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]*models.Configv1LabelFilter, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(models.Configv1LabelFilter)
				**out = **in
			}
		}
	}
	if in.GraphiteLabelPolicy != nil {
		in, out := &in.GraphiteLabelPolicy, &out.GraphiteLabelPolicy
		*out = new(models.RollupRuleGraphiteLabelPolicy)
		**out = **in
	}
	if in.LabelPolicy != nil {
		in, out := &in.LabelPolicy, &out.LabelPolicy
		*out = new(models.Configv1RollupRuleLabelPolicy)
		**out = **in
	}
	if in.StoragePolicy != nil {
		in, out := &in.StoragePolicy, &out.StoragePolicy
		*out = new(models.Configv1RollupRuleStoragePolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRollupRuleSpec.
func (in *ChronosphereRollupRuleSpec) DeepCopy() *ChronosphereRollupRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRollupRuleSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereRollupRuleStatus) DeepCopyInto(out *ChronosphereRollupRuleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereRollupRuleStatus.
func (in *ChronosphereRollupRuleStatus) DeepCopy() *ChronosphereRollupRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereRollupRuleStatus)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereTeam) DeepCopyInto(out *ChronosphereTeam) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereTeam.
func (in *ChronosphereTeam) DeepCopy() *ChronosphereTeam {
	if in == nil {
		return nil
	}
	out := new(ChronosphereTeam)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereTeam) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereTeamList) DeepCopyInto(out *ChronosphereTeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChronosphereTeam, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereTeamList.
func (in *ChronosphereTeamList) DeepCopy() *ChronosphereTeamList {
	if in == nil {
		return nil
	}
	out := new(ChronosphereTeamList)
	out = in
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChronosphereTeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereTeamSpec) DeepCopyInto(out *ChronosphereTeamSpec) {
	*out = *in
	if in.UserEmails != nil {
		in, out := &in.UserEmails, &out.UserEmails
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereTeamSpec.
func (in *ChronosphereTeamSpec) DeepCopy() *ChronosphereTeamSpec {
	if in == nil {
		return nil
	}
	out := new(ChronosphereTeamSpec)
	out = in
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChronosphereTeamStatus) DeepCopyInto(out *ChronosphereTeamStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChronosphereTeamStatus.
func (in *ChronosphereTeamStatus) DeepCopy() *ChronosphereTeamStatus {
	if in == nil {
		return nil
	}
	out := new(ChronosphereTeamStatus)
	out = in
	return out
}
